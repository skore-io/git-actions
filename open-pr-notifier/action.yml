name: Open PR Notifier
description: Notify about open PRs for a long time and perform automatic actions

runs:
  using: composite

  steps:
    - name: Check PRs and notify
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          function getBusinessDays(startDate) {
            if (startDate.getHours() >= 16) {
              startDate.setDate(startDate.getDate() + 1);
            }

            let count = 0;
            const now = new Date();
            const curDate = startDate;

            now.setHours(0, 0, 0, 0);
            curDate.setHours(0, 0, 0, 0);

            while (curDate < now) {
              const dayOfWeek = curDate.getDay();

              if (dayOfWeek !== 0 && dayOfWeek !== 6) count++;

              curDate.setDate(curDate.getDate() + 1);
            }

            return count;
          }

          const dayOfWeek = new Date().getDay();
          if (dayOfWeek === 0 || dayOfWeek === 6) return;

          const { data: prs } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            per_page: 100,
          });

          for (const pr of prs) {
            const createdAt = new Date(pr.created_at);
            const updatedAt = new Date(pr.updated_at);

            const daysOpen = getBusinessDays(createdAt);
            const daysSinceUpdate = getBusinessDays(updatedAt);

            console.info(`PR #${pr.number}: ${daysOpen} business days open, ${daysSinceUpdate} business days since update`);

            if (daysOpen === 1) {
              const { data: reviews } = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number
              });

              const validReviews = reviews.filter(r =>
                ['APPROVED', 'CHANGES_REQUESTED', 'COMMENTED'].includes(r.state)
              );

              if (validReviews.length === 0) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: `⚠️ Esse PR tá aberto há 1 dia útil e ainda não recebeu nenhuma revisão. Que tal dar um ping na galera pra revisar?`
                });
              }
            }

            if (daysOpen === 2) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `📣 Esse PR tá aberto há 2 dias úteis. Tem algo travando ou já dá pra seguir com QA?`
              });
            }

            if (daysOpen === 3) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `⏳ Esse PR tá aberto há 3 dias úteis. Que tal dar um gás nele?`
              });
            }

            if (daysOpen === 4) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `🚨 Esse PR tá por aqui há 4 dias úteis. Tá tudo certo? Se tiver algo travando, o time pode dar uma força — tamo junto!`
              });
            }

            if (daysOpen === 5) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `⏰ 5 dias úteis de PR! Você desbloqueou a conquista: "PR lendário em modo espera" 🏅

                Se não houver atividade nas próximas 24h, ele será fechado automaticamente. Bora evitar isso?`
              });
            }

            if (daysOpen > 5 && daysSinceUpdate >= 1) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `Esse PR ficou aberto por ${daysOpen} dias úteis e sem atualizações nas últimas 24h. Fechando automaticamente — se ainda for relevante, sinta-se à vontade pra reabrir.`
              });

              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                state: 'closed'
              });
            }
          }
